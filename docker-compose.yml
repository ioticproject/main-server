version: '3'
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    command: python -u app.py
    container_name: flask
    image: flask
    ports:
      - 5000:5000
    restart: unless-stopped
    environment:
      AUTH_URL: ${AUTHENTICATION_URL}
      PASSWORD_SECRET: ${PASSWORD_SECRET}
      APP_ENV: "prod"
      APP_DEBUG: "True"
      APP_PORT: 5000
      MONGODB_DATABASE: db
      MONGODB_HOSTNAME: mongodb
      MONGODB_PORT: ${MONGODB_PORT}
      DB_ADMIN: ${DB_ADMIN}
      DB_PASSWORD: ${DB_PASSWORD} 
      DB_HOST: ${DB_HOST}
      SMTP_PORT: ${SMTP_PORT}
      PASSWORD_EMAIL: ${PASSWORD_EMAIL}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      TRIGGER_ROUTE: ${TRIGGER_ROUTE}
      API_KEY: $API_KEY
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      FIREBASE_TOKEN: ${FIREBASE_TOKEN}
    volumes:
      - './api:/api'
    # depends_on:
      # - mongodb
    # networks:
    #   - frontend
    #   - backend

  # mongodb:
  #   image: mongo:3.6.1
  #   container_name: mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_DATABASE: db
  #   volumes:
  #     - './data:/data/db'
  #   networks:
  #     - backend

  # nginx:
  #   build: ./nginx
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - 80:80
  #   volumes:
  #     - "~/container_logs/nginx/log:/var/log/nginx"
  #   depends_on:
  #     - flask
  #   networks:
  #     - frontend
      
#networks:
#  frontend:
#    driver: bridge
#  backend:
#    driver: bridge
